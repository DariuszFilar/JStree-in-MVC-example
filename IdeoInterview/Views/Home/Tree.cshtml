@using IdeoInterview.Models
@model IdeoInterview.ViewModels.FormViewModel

<style>
       
      h1 {
      margin: 0 0 20px;
      font-weight: 400;
      color: #1c87c9;
      text-align: center;
      }
    .formTest {
        text-align: center;
        padding: 25px;
        margin: 25px;
        box-shadow: 0 2px 5px #f5f5f5;
        background: #f5f5f5;
        border-style: solid;
        position: relative;
        outline: none;
    }          
</style>

<div class="row" style="padding-top: 20px">
    <div id="jstree"></div>
</div>
<div style="padding-top: 5px">
    <button class="btn btn-primary" id="btnCreateFolder">Stwórz nowy folder</button>
    <input id="inputFolderName" placeholder="Nazwa nowego folderu">
</div>
<div style="padding-top: 5px">
    <button class="btn btn-primary" id="btnCreateForm">Stwórz nowy formularz</button>
    <input id="inputFormName" placeholder="Nazwa nowego formularzu">
</div>
<div style="padding-top: 5px">
    <button class="btn btn-primary" id="editNode">Edytuj</button>
    <button class="btn btn-danger" id="delateNode">Usuń</button>
</div>


<div id="title"></div>
<div id="question"></div>
<div id="answer"></div>

<div class="main-block">
    <form class="formTest">
        <h2>Tytuł:</h2>
        <h1 id="formTitle"></h1>
        <h2>Pytanie:</h2>
        <h1 id="formQuestion"></h1>
        <h2>Odpowiedź:</h2>
        <h1 id="formAnswer"></h1>
    </form>
</div>


<script>


    $(function () {

        $("#jstree").jstree("#jstree").bind("move_node.jstree", function (e, data) {
            $.ajax({
                type: "GET",
                url: "/Home/MoveNode",
                data: { "id": data.node.id, "parentId": data.parent },
            })
        });

        $('#jstree').on("select_node.jstree", function (e, data) {
            if (data.node.type == "file") {
                $.ajax({
                    type: "POST",
                    url: "/Home/GetForm",
                    data: { "formId": data.node.id },
                })
                    .success(function (model) {
                        if (model.Title != null) {
                            $("#formTitle").text(model.Title);
                        }
                        if (model.Question != null) {
                            $("#formQuestion").text(model.Question);
                        } else { $("#formQuestion").text("Brak pytania"); }
                        if (model.Answer != null) {
                            $("#formAnswer").text(model.Answer);
                        } else { $("#formAnswer").text("Brak odpowiedzi"); }
                    });
            }
        });

        var data = {
            'url': '/Home/Nodes',
            'data': function (node) {
                return { 'id': node.id }
            }
        }
        $("#jstree").jstree({
            "core": {
                "check_callback": true,
                "data": data
            }, "types": {
                "default": {
                    "valid_children": ["default", "file"]
                },
                "file": {
                    "icon": "glyphicon glyphicon-file",
                    "valid_children": []
                }
            },
            "plugins": [
                "dnd", "state", "types",
                "wholerow"
            ]
        });

        var idsToRemove = [];
        function sendDeleteRequest() {
            idsToRemove.forEach((id) => $("#jstree").jstree().delete_node(id));
            $.ajax({
                type: "POST",
                url: "/Home/DeleteNode",
                data: { "ids": idsToRemove },
            });
            idsToRemove = [];
            return;
        }
        function recursivelyRemoveChildren(jsTree, childId) {
            var node = jsTree.get_node(childId);
            if (node.children.length) {
                node.children.forEach((grandChildId) => recursivelyRemoveChildren(jsTree, grandChildId));
            }
            idsToRemove.push(childId);
        }

        $("#delateNode").click(function () {
            var jsTree = $("#jstree").jstree();
            var nodeToDelete = (jsTree.get_selected(true))[0];
            if (!nodeToDelete) {
                return;
            }
            idsToRemove.push(nodeToDelete.id);
            if (!nodeToDelete.children.length) {
                sendDeleteRequest();
                return;
            }
            nodeToDelete.children.forEach((child) => recursivelyRemoveChildren(jsTree, child));
            sendDeleteRequest();
        });


        $('#btnCreateFolder').click(function () {
            var parent = null;
            var temp = $("#jstree").jstree("get_selected")[0];
            var tempLastId = 0
            if (temp) {
                parent = temp;
            }

            $.ajax({
                type: "GET",
                async: true,
                url: "/Home/GetLastNodeId",
                contentType: "application/json",
                context: this,
                success: function (lastId) {
                    tempLastId = lastId;
                    $('#jstree').jstree().create_node(parent, {
                        "id": ++lastId,
                        "text": inputFolderName.value, "type": "default"
                    }, "last")
                    if (lastId == 1) {
                        $("#jstree").jstree().refresh();
                    }
                },
                error: function (error) {
                    console.log(error);
                }
            })
                .then(() => {
                 var name = $("#inputFolderName").val();
                    $.ajax({
                 type: "POST",
                        url: "/Home/AddFolder",
                        data: { "name": name, "parent": parent, "type": "default" },
                    })
                    if (tempLastId == 0 || tempLastId == 1) {
                        $("#jstree").jstree().refresh();
                    }
                });
        });

        $('#editNode').click(function () {
            var selectedNode = $("#jstree").jstree("get_selected")[0];
            $.ajax({
                type: "GET",
                async: true,
                url: "/Home/GetTypeOfNode",
                contentType: "application/json",
                context: this,
                success: function (ids) {
                    if (ids.includes(selectedNode)) {
                        var url = '@Url.Action("EditForm", "Home", new { formId = "id" })'.replace('id', selectedNode);
                        window.location.href = url;
                    }
                },
            });
        });

        $('#btnCreateForm').click(function () {
            var parent = null;
            var temp = $("#jstree").jstree("get_selected")[0];
            var tempLastId = 0;
            if (temp) {
                parent = temp;
            }

            $.ajax({
                type: "GET",
                async: true,
                url: "/Home/GetLastNodeId",
                contentType: "application/json",
                context: this,
                success: function (lastId) {
                    if (lastId == 0 || !temp) {
                    }
                    else {
                        tempLastId = lastId;
                        $('#jstree').jstree().create_node(parent, {
                            "id": ++lastId,
                            "text": inputFormName.value, "type": "file"
                        }, "last")
                    };
                },
                error: function (error) {
                },
            })
                .then(() => {
                    var name = $("#inputFormName").val();
                    if (tempLastId != 1) {
                        $.ajax({
                            type: "POST",
                            url: "/Home/AddForm",
                            data: { "name": name, "parent": parent, "type": "file" },
                        })
                    }
                });
        });
    });

</script>